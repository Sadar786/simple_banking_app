{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useNavigate,parsePath}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const SendMoney=()=>{const[name,setName]=useState('');const[price,setPrice]=useState(0);const params=useParams();const Navigate=useNavigate();const[newAmount,setNewAmount]=useState(0);const user=localStorage.getItem('user');useEffect(()=>{const getAccountDetail=async()=>{try{let result=await fetch(\"http://localhost:5000/products/\".concat(params._id),{headers:{'Content-Type':'application/json',authorization:\"bearer \".concat(JSON.parse(localStorage.getItem('token')))}});if(result.ok){result=await result.json();setName(result.name);console.log(name);setPrice(result.price);console.log(price);console.log(\"11111\");}else{console.error(\"Failed to fetch:\",result.status,result.statusText);}}catch(error){console.error(\"Fetch error:\",error);}};getAccountDetail();},[params._id]);const calculatePrice=async()=>{let userData=await JSON.parse(user);let moneySend=await parseFloat(userData.money);// Subtract the entered price from userData.money\nuserData.money=(await moneySend)-newAmount;// Add the entered price to the present newAmount\nlet updatedNewAmount=(await parseFloat(newAmount))+parseFloat(price);// Update the state with the new values\nawait setPrice(updatedNewAmount);// Update localStorage with modified userData\nawait localStorage.setItem('user',JSON.stringify(userData));};const handleUpdateAccount=async()=>{calculatePrice();let response=await fetch(\"http://localhost:5000/product/\".concat(params._id),{method:\"POST\",body:JSON.stringify({}),headers:{'Content-Type':'application/json',authorization:\"bearer \".concat(JSON.parse(localStorage.getItem('token')))}});if(response.ok){const result=await response.json();console.log(result);Navigate('/');}else{console.error(\"Failed to update product:\",response.status,response.statusText);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"inputBox\",children:\"Sending Money\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"inputBox\",children:name}),/*#__PURE__*/_jsx(\"h2\",{className:\"inputBox\",children:price}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Price to send\",className:\"inputBox\",onChange:e=>{setNewAmount(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"signUp-btn\",onClick:()=>handleUpdateAccount(),children:\"Pay Now\"})]});};export default SendMoney;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","parsePath","jsx","_jsx","jsxs","_jsxs","SendMoney","name","setName","price","setPrice","params","Navigate","newAmount","setNewAmount","user","localStorage","getItem","getAccountDetail","result","fetch","concat","_id","headers","authorization","JSON","parse","ok","json","console","log","error","status","statusText","calculatePrice","userData","moneySend","parseFloat","money","updatedNewAmount","setItem","stringify","handleUpdateAccount","response","method","body","children","className","type","placeholder","onChange","e","target","value","onClick"],"sources":["C:/Users/SAMSUNG/OneDrive/Desktop/Spark_banking/Basic_banking_Web-App/frontend/src/components/Send.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, parsePath } from 'react-router-dom';\r\n\r\nconst SendMoney = () => {\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const params = useParams();\r\n  const Navigate = useNavigate();\r\n  const [newAmount, setNewAmount] = useState(0);\r\n  const user = localStorage.getItem('user');\r\n\r\n   useEffect(() => {\r\n    const getAccountDetail = async () => {\r\n      try {\r\n        let result = await fetch(`http://localhost:5000/products/${params._id}`, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n             authorization: `bearer ${JSON.parse(localStorage.getItem('token'))}`,\r\n          },\r\n        });\r\n        if (result.ok) {\r\n          result = await result.json();\r\n          setName(result.name);\r\n          console.log(name)\r\n           setPrice(result.price);\r\n           console.log(price)\r\n           console.log(\"11111\")\r\n         } else {\r\n          console.error(\"Failed to fetch:\", result.status, result.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Fetch error:\", error);\r\n      }\r\n    };\r\n    getAccountDetail();\r\n  }, [params._id]);\r\n\r\n  const calculatePrice = async () => {\r\n    let userData = await JSON.parse(user);\r\n    let moneySend = await parseFloat(userData.money);\r\n   \r\n    // Subtract the entered price from userData.money\r\n    userData.money = await moneySend - newAmount;\r\n  \r\n    // Add the entered price to the present newAmount\r\n    let updatedNewAmount = await parseFloat(newAmount) + parseFloat(price);\r\n  \r\n    // Update the state with the new values\r\n    await setPrice(updatedNewAmount);\r\n  \r\n    // Update localStorage with modified userData\r\n    await localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n  \r\n  \r\n  const handleUpdateAccount = async () => {\r\n    calculatePrice();\r\n\r\n    let response = await fetch(`http://localhost:5000/product/${params._id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({   }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `bearer ${JSON.parse(localStorage.getItem('token'))}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const result = await response.json();\r\n      console.log(result);\r\n      Navigate('/');\r\n    } else {\r\n      console.error(\"Failed to update product:\", response.status, response.statusText);\r\n\r\n    }\r\n  \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='inputBox'>Sending Money</h1>\r\n      <h2 className='inputBox'>{name}</h2>\r\n      <h2 className='inputBox'>{price}</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder='Enter Price to send'\r\n         className='inputBox'\r\n          onChange={(e) => { setNewAmount(e.target.value) }}\r\n      />\r\n      <button className='signUp-btn' onClick={() => handleUpdateAccount()}>Pay Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMoney;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}